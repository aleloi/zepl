.{
    // This is the default name used by packages depending on this one. For
    // example, when a user runs `zig fetch --save <url>`, this field is used
    // as the key in the `dependencies` table. Although the user can choose a
    // different name, most users will stick with this provided value.
    //
    // It is redundant to include "zig" in this name because it is already
    // within the Zig package namespace.
    .name = "zepl",

    // This is a [Semantic Version](https://semver.org/).
    // In a future version of Zig it will be used for package deduplication.
    .version = "0.0.0",

    // This field is optional.
    // This is currently advisory only; Zig does not yet do anything
    // with this value.
    //.minimum_zig_version = "0.11.0",

    // This field is optional.
    // Each dependency must either provide a `url` and `hash`, or a `path`.
    // `zig build --fetch` can be used to fetch all dependencies of a package, recursively.
    // Once all dependencies are fetched, `zig build` no longer requires
    // internet connectivity.
    .dependencies = .{
        .linenoise = .{
            .url = "https://github.com/mrjbq7/linenoize/archive/af2029faaaddcb58e99c195a5f146bbb1af0f90c.tar.gz",
            .hash = "12208cf74c4291f3c8a314fbb2afec1cd922c58ee9f0d0e160894ad7c4cef584e98d",
        },
        .treez = .{
            .url = "https://github.com/ziglibs/treez/archive/a5e176441cde3d309fcdbf570e364d3706936c11.tar.gz",
            .hash = "122070dab8241fb4523c77666f225159876da1eb40b04ce9069262cf9ef9c8d1d03b",
        },
        .@"tree-sitter" = .{
            .url = "https://github.com/tree-sitter/tree-sitter/archive/cad2d03101341296906971464ee68f811debea0d.tar.gz",
            .hash = "1220937a628d9e5fe95b8f934d60486471730a0f661912c1f0e16542ae2151262146",
        },

        .syntax = .{
            .url = "https://github.com/neurocyte/flow-syntax/archive/28bc77f4615488aaa269c25fc862864f4b3a7460.tar.gz",
            .hash = "1220abddc10ca8f8b6b5477f8c007948c168504b9dd3516899fe37251890eeabf4ab",
        },

        .@"ansi-term" = .{
            .url = "https://github.com/ziglibs/ansi-term/archive/0bb62115db6749044765fdb37c9791388e7970f2.tar.gz",
            .hash = "12200719196e0abd325efa248fb03882c8fa2c7130e3ae1d57dbff72afc846b28495",
        },

        // Load the generated grammar parser from our fork. The
        // original ziglibs/tree-sitter-zig doesn't build with 0.13
        // and doesn't contain the generated grammar
        // parser. src/parser.c is meant to be generated by the
        // tree-sitter cli. This fork checks it in for simpler zig
        // building - we COULD build the cli from @"tree-sitter", and
        // run in on the grammar in a build step, but this is much
        // simpler.
        .@"tree-sitter-zig" = .{
            .url = "https://github.com/aleloi/tree-sitter-zig/archive/b677dba1f925424787048180f5bbe2cf7f5835d4.tar.gz",
            .hash = "1220f4c3957b38a0b96ec259dbd8f354a6e8ca5735164f8190885882454188e80bd0",
        },
        // .tmpfile = .{
        //     .url = "https://github.com/liyu1981/tmpfile.zig/archive/7ca14fb3a8a59e5ab83d3fca7aa0b85e087bd6ff.tar.gz",
        //     .hash = "122063aa2dd8a08b08f99f7d7714fb2d4f3657323b7d0168c699cef59154c9279891",
        // },
    },
    .paths = .{
        "build.zig",
        "build.zig.zon",
        "src",
        // For example...
        //"LICENSE",
        //"README.md",
    },
}
